{"version":3,"sources":["components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","pages/People/People.tsx","pages/NotFound/NotFound.tsx","pages/Home/Home.tsx","components/PageNavLink/PageNavLink.tsx","components/MainNav/MainNav.tsx","components/LayoutRouter/LayoutRouter.tsx","App.tsx","index.tsx"],"names":["Loader","className","PersonLink","person","cn","sex","to","slug","name","PersonInfo","useParams","born","died","mother","motherName","father","fatherName","tableHeaders","PeopleTable","people","map","header","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","People","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useEffect","fetchData","peopleFromServer","visiblePeople","find","someMother","someFather","isVisibleError","isNotVisiblePeopleFromServer","length","isVisiblePeopleTable","NotFound","Home","PageNavLink","text","isActive","MainNav","role","LayoutRouter","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.dce0e1d4.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\nconst femaleSex = 'f';\n\ninterface Props {\n  person: Person\n}\n\nexport const PersonLink: FC<Props> = ({ person }) => (\n  <Link\n    className={cn({\n      'has-text-danger': person.sex === femaleSex,\n    })}\n    to={person.slug}\n  >\n    {person.name || '-'}\n  </Link>\n);\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  person: Person\n}\nexport const PersonInfo: FC<Props> = ({ person }) => {\n  const { slug } = useParams<{ slug: string }>();\n\n  return (\n    <tbody>\n      <tr\n        data-cy=\"person\"\n        className={cn({ 'has-background-warning': person.slug === slug })}\n      >\n        <td>\n          <PersonLink person={person} />\n        </td>\n\n        <td>{person.sex}</td>\n        <td>{person.born}</td>\n        <td>{person.died}</td>\n        <td>\n          {person.mother\n            ? (<PersonLink person={person.mother} />)\n            : (person.motherName || '-')}\n        </td>\n\n        <td>\n          {person.father\n            ? (<PersonLink person={person.father} />)\n            : (person.fatherName || '-')}\n        </td>\n      </tr>\n    </tbody>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../../types';\nimport { PersonInfo } from '../PersonInfo';\n\nconst tableHeaders = [\n  'Name',\n  'Sex',\n  'Born',\n  'Died',\n  'Mother',\n  'Father',\n];\n\ninterface Props {\n  people: Person[]\n}\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {tableHeaders.map((header) => (\n            <th key={header}>{header}</th>\n          ))}\n        </tr>\n      </thead>\n\n      {people.map((person) => (\n        <PersonInfo\n          data-cy=\"person\"\n          key={person.slug}\n          person={person}\n        />\n      ))}\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC, useEffect, useState } from 'react';\nimport { Loader } from '../../components/Loader';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\n\nexport const People: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const peopleFromServer = await getPeople();\n\n        setPeople(peopleFromServer);\n      } catch {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const visiblePeople: Person[] = people.map(person => {\n    const mother = people.find(\n      someMother => someMother.name === person.motherName,\n    );\n    const father = people.find(\n      someFather => someFather.name === person.fatherName,\n    );\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n\n  const isVisibleError = isError && !isLoading;\n  const isNotVisiblePeopleFromServer = !visiblePeople.length\n    && !isError && !isLoading;\n  const isVisiblePeopleTable = visiblePeople.length > 0\n    && !isError && !isLoading;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isVisiblePeopleTable && (\n            <PeopleTable people={visiblePeople} />)}\n\n          {isVisibleError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isNotVisiblePeopleFromServer && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export const Home = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import cn from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport type Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import { FC } from 'react';\nimport { PageNavLink } from '../PageNavLink';\n\nexport const MainNav: FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { FC } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { MainNav } from '../MainNav';\n\nexport const LayoutRouter: FC = () => (\n  <>\n    <div data-cy=\"app\">\n      <MainNav />\n    </div>\n    <Outlet />\n  </>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { People } from './pages/People';\nimport { NotFound } from './pages/NotFound';\nimport { Home } from './pages/Home';\nimport { LayoutRouter } from './components/LayoutRouter';\n\nexport const App = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <Routes>\n        <Route path=\"/\" element={<LayoutRouter />}>\n          <Route index element={<Home />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\" element={<People />}>\n            <Route path=\":slug\" element={<People />} />\n          </Route>\n          <Route path=\"*\" element={<NotFound />} />\n        </Route>\n      </Routes>\n    </div>\n  </main>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}